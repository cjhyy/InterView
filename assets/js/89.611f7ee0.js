(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{289:function(t,e,n){"use strict";n.r(e);var o=n(0),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vue的diff算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue的diff算法"}},[t._v("#")]),t._v(" Vue的diff算法")]),t._v(" "),n("ans",[n("p",[t._v("问题：渲染真实的DOM开销是很大的，修改了某个数据，如果直接渲染到真实dom上会引起整个DOM树的重绘和重排。")]),t._v(" "),n("p",[t._v("Virtual Dom 根据真实DOM生成的一个Virtual DOM，当Virtual DOM某个节点的数据改变后生成一个新的Vnode，然后Vnode和oldVnode作对比，发现有不一样的地方就直接修改在真实的DOM上，然后使oldVnode的值为Vnode.")]),t._v(" "),n("p",[t._v("注意：在采取diff算法比较的时候，只会在同层级进行，不会跨层级比较。")]),t._v(" "),n("p",[t._v("当数据发生改变时，set方法会让调用Dep.notify()方法通知所有订阅者Watcher，订阅者就会调用patch函数给真实的DOM打补丁，更新响应的试图。")])])],1)}),[],!1,null,null,null);e.default=a.exports}}]);