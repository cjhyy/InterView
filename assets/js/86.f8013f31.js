(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{286:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"vuex的理解及使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex的理解及使用场景"}},[e._v("#")]),e._v(" Vuex的理解及使用场景")]),e._v(" "),s("ans",[s("p",[e._v("Vuex 是一个专为 Vue 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("1. Vuex 的状态存储是响应式的；当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新\n2. 改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation，这样使得我们可以方便地跟踪每一个状态的变化\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("Vuex主要包括以下几个核心模块：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("1. State：定义了应用的状态数据\n2. Getter：在 store 中定义“getter”（可以认为是 store 的计算属性），就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算\n3. Mutation：是唯一更改 store 中状态的方法，且必须是同步函数\n4. Action：用于提交 mutation，而不是直接变更状态，可以包含任意异步操作\n5. Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("img",{staticStyle:{zoom:"150%"},attrs:{src:"https://user-gold-cdn.xitu.io/2020/2/17/17050f12d4f0494e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"Vuex架构图"}})])],1)}),[],!1,null,null,null);t.default=r.exports}}]);